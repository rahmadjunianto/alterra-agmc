name: Deploy Day 6

on:
  push:
    branches:
      - main

jobs:
  build-docker:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./day 6/
    steps:
      - uses: actions/checkout@v3

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} 
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: build docker container
        run: |
         docker build . -t madjun/agmc:latest -f Dockerfile
      - name: push docker container
        run: |
          docker push madjun/agmc:latest
  deploy:
    name: Deploy to EC2 on main branch push
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Checkout the files
        uses: actions/checkout@v2
      - name: Deploy to Server EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST_IP }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${REMOTE_USER}@${REMOTE_HOST} '
          
            #Now we have got the access of EC2 and we will start the deploy .
              sudo chmod 777 /var/run/docker.sock
              docker pull madjun/agmc:latest &&
              docker container stop agmc || true &&
              docker container rm agmc || true &&
              docker container create --name agmc -p 3000:3000 -e DB_HOST=$DB_HOST -e DB_PASS=$DB_PASS DB_NAME=$DB_NAME madjun/agmc:latest &&
              docker container start agmc